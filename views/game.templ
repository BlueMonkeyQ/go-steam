package views

import (
    "go-steam/views/layout"
    "go-steam/model"
    "go-steam/util"
    )

templ DetailPageBase(data model.GameData) {
    @layout.Base(){
        
        @AppDetails(data.AppDetails)   

        // Causes Crash
        <button 
            hx-get={ "/updateAchivements/"+ data.AppDetails.AppID } 
            hx-trigger="click"
            hx-target="#achievements-table"
            hx-swap="outerHTML">
            Update Achievements
        </button>            

        <div>
            <h2>Achievements</h2>
            @AchievementTable(data.Achievements)
        </div>
    }
}

templ AppDetails(data model.AppDetails) {
    <div class="app-details">
        <img src={ data.HeaderImage }>
        <h1>{ data.Name }</h1>
        <h2>Released { data.ReleaseDate }</h2>

        <p>Playtime { util.IntToString(data.PlaytimeForever) }hrs</p>
        <p>Last Time Played { data.RtimeLastPlayed }</p>
        <p>Past 2 Weeks Played { util.IntToString(data.Playtime2Weeks) }hrs</p>

        <a href={ templ.URL("https://store.steampowered.com/app/" + data.AppID) }>Steam Page</a>
        <p>{ data.ShortDescripton }</p>

        <h3>Developers</h3>
        for _, i := range data.Developers{
            <p>{ i }</p>
        }

        <h3>Publishers</h3>
        for _, i := range data.Publishers{
            <p>{ i }</p>
        }

        <h3>Categories</h3>
        for _, i := range data.Categories{
            <p>{ i }</p>
        }

        <h3>Genres</h3>
        for _, i := range data.Genres{
            <p>{ i }</p>
        }

        <h3>Platforms</h3>
        if data.Windows == true {
            <p>Windows</p>
        }
        if data.Linux == true {
            <p>Linux</p>
        }
        if data.Mac == true {
            <p>Mac</p>
        }

    </div>
}

templ AchievementRow(data model.Achievement) {
    <tr id={ "achievement-row-" + data.Name }>
        if data.Achieved {
            <td><img src={ data.Icon } alt="Whoops"></td>
        } else {
            <td><img src={ data.IconGray } alt="Whoops"></td>
        }
        <td>{ data.DisplayName }</td>
        <td>{ data.Description }</td>
        <td>{ data.Percentage }</td>
        if data.Unlocktime == "0" {
            <td></td>
        } else {
            <td>{ data.Unlocktime }</td>
        }
    </tr>
}


templ AchievementTable(data model.AchivementDetails) {
    <div id="achievements-table">
        <p>Last Updated: { data.LastUpdated }</p>
        <table>
            <tr>
                <th>Icon</th>
                <th>Name</th>
                <th>Description</th>
                <th>Global</th>
                <th>Unlocked On</th>
            </tr>
            for _, achievement := range data.Achievements {
                @AchievementRow(achievement)
            }
        </table>
    </div>
}